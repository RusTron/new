{"version":3,"sources":["assets/images/wezom-logo.svg","assets/images/backdrop.jpg","store/reducers/peopleReducer.js","variables/forContacts.js","store/store.js","constants/env.js","logo/view.jsx","navbar/container.js","navbar/view.jsx","pages/Header/Header.jsx","layouts/base/style.js","layouts/base/view.jsx","FormForTable/FormForTable.jsx","pages/Contacts/components/Statistics/Statistics.jsx","Table/container.jsx","constants/nationalities.js","pages/Contacts/components/Gallery/Gallery.jsx","api/api.js","pages/Contacts/Contacts.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","actionCreators","items","type","peopleData","value","error","item","searchValue","selectedGender","selectedNationality","clear","data","contactsInitialState","rootReducer","combineReducers","people","state","action","form","formReducer","store","createStore","APP_NAME","process","REACT_APP_ALLOW_DEV_CONSOLE","REACT_APP_ALLOW_REDUX_DEVTOOLS_EXTENSION","REACT_APP_ALLOW_WINDOW_EXTENDS","REACT_APP_NAME","REACT_APP_API_URL","REACT_APP_API_VERSION","REACT_APP_API_CONTACTS_SEED_KEY","REACT_APP_HISTORY_BASENAME","View","React","memo","to","className","activeClassName","exact","src","WezomLogo","alt","NavBar","compose","connect","location","console","log","Header","gutter","align","htmlType","icon","LoginOutlined","style","content","backgroundImage","backdrop","props","children","currentYear","useMemo","Date","getFullYear","Content","Footer","Option","Select","FormForTable","view","useState","query","setQuery","Form","useForm","checked","setChecked","nationalities","useSelector","map","person","nationality","name","filter","nat","i","arr","indexOf","dispatch","useDispatch","useEffect","resetFields","clearSearch","clearData","layout","Item","Search","placeholder","onChange","filterByName","target","allowClear","onSelect","mode","optionLabelProp","label","key","role","aria-label","onClick","CloseOutlined","Statistics","males","females","Indeterminate","forEach","gender","hasOwnProperty","span","title","length","size","column","Object","keys","Paragraph","Typography","columns","dataIndex","render","picture","thumbnail","sorter","a","b","localeCompare","dob","weekday","date","toLocaleTimeString","year","month","day","age","email","copyable","text","phone","row","newPhone","AsYouType","input","country","street","city","postcode","number","tag","color","NATIONALITIES","AU","BR","CA","CH","DE","DK","ES","FI","FR","GB","IE","IR","NO","NL","NZ","TR","US","Meta","Card","Gallery","grid","dataSource","header","footer","pagination","page","pageSize","renderItem","xs","hoverable","width","cover","large","dashed","description","find","Math","ceil","random","Contacts","loading","setLoading","localStorage","getItem","JSON","parse","setView","saveView","setItem","stringify","loadData","fetch","then","response","json","catch","e","results","first","last","persons","toLowerCase","includes","filterPeople","shape","ReloadOutlined","Group","defaultValue","UnorderedListOutlined","AppstoreOutlined","App","path","component","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fb7bfc91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wezom-logo.324b96ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/backdrop.f7eab148.jpg\";","import { \n  SETPEOPLE,\n  FILTERBYNAME,\n  SETSELECTEDGENDER,\n  SETSELECTEDNATIONALITY,\n  CLEARFORM,\n  CLEARDATA,\n  SETERROR,\n} from '../../variables/forContacts';\n\nexport const actionCreators = {\n  setData: (items) => ({\n    type: SETPEOPLE,\n    peopleData: items,\n  }),\n  setError: (value)=>({\n      type: SETERROR,\n      error: value,\n  }),\n  filterByName: (item) => ({\n    type: FILTERBYNAME,\n   searchValue: item,\n  }),\n  selectGender: (item) => ({\n    type: SETSELECTEDGENDER,\n    selectedGender: item,\n  }),\n  selectNationality: (item) => ({\n    type: SETSELECTEDNATIONALITY,\n    selectedNationality: item,\n  }),\n  clearForm: () => ({\n    type: CLEARFORM,\n    clear: true,\n  }),\n  clearData: (value) => ({\n    type: CLEARDATA,\n    data: value,\n  })\n}\n\nexport const filterPeople = ({people}) => {\n\n  const {peopleData, searchValue, selectedNationality, selectedGender, data} = people;\n\n  let persons = [];\n  console.log(people);\n  if (data) {\n    return persons;\n  }\n  if (peopleData) {\n    persons = [...peopleData];\n  };\n\n  if (searchValue) {\n    persons = persons.filter(item=> \n      item.name.toLowerCase().includes(searchValue.toLowerCase()))\n  };\n\n  if (selectedNationality && selectedNationality.length) {\n    persons = persons.filter(item=> selectedNationality.includes(item.nationality.name))\n  };\n\n  if (selectedGender) {\n    persons = persons.filter(person=> person.gender === selectedGender)\n  }\n\n  return persons;\n}\n\nconst contactsInitialState = () => ({\n  peopleData: [],\n  searchValue: '',\n  selectedNationality: [],\n  selectedGender: '',\n  clear: false,\n  data: true,\n  error: false,\n});\n\nexport const peopleReducer = (state = contactsInitialState, action) => {\n  switch (action.type) {\n    case SETERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case SETPEOPLE:\n      return {\n        ...state,\n        peopleData: action.peopleData,\n      };\n    case FILTERBYNAME:\n      return {\n        ...state,\n        searchValue: action.searchValue,\n      };\n    case  SETSELECTEDGENDER:\n    return {\n      ...state,\n      selectedGender: action.selectedGender,\n    };\n    case  SETSELECTEDNATIONALITY:\n      return {\n        ...state,\n        selectedNationality: [...action.selectedNationality],\n      };\n    case  CLEARFORM:\n      return {\n        ...state,\n        searchValue: '',\n        selectedNationality: '',\n        selectedGender: '',\n        clear: false,\n      };\n    case  CLEARDATA:\n      return {\n        ...state,\n        data: action.data,\n      }\n\n    default:\n      return state;\n  }\n};\n","export const SETPEOPLE = 'SETPEOPLE';\nexport const SETERROR = 'SETERROR';\nexport const FILTERBYNAME = 'FILTERBYNAME';\nexport const SETSELECTEDNATIONALITY = 'SETSELECTEDNATIONALITY';\nexport const SETSELECTEDGENDER = 'SETSELECTEDGENDER';\nexport const CLEARFORM = 'CLEARFORM';\nexport const CLEARDATA = 'CLEARDATA';\n","import { createStore, combineReducers } from 'redux';\nimport { peopleReducer} from './reducers/peopleReducer';\nimport { reducer as formReducer} from 'redux-form';\n\nconst rootReducer = combineReducers({\n  people: peopleReducer,\n  form: formReducer,\n});\nconst store = createStore(rootReducer);\n\nexport default store;\n","/** Build environment */\r\nexport const BUILD_ENV = process.env.NODE_ENV;\r\nexport const IS_DEVELOPMENT = BUILD_ENV === 'development';\r\nexport const IS_PRODUCTION = BUILD_ENV === 'production';\r\n\r\n/** Permissions */\r\nexport const ALLOW_DEV_CONSOLE = process.env.REACT_APP_ALLOW_DEV_CONSOLE === 'true';\r\nexport const ALLOW_REDUX_DEVTOOLS_EXTENSION = process.env.REACT_APP_ALLOW_REDUX_DEVTOOLS_EXTENSION === 'true';\r\nexport const ALLOW_WINDOW_EXTENDS = process.env.REACT_APP_ALLOW_WINDOW_EXTENDS === 'true';\r\n\r\n/** App */\r\nexport const APP_NAME = process.env.REACT_APP_NAME || 'Wezom React-Redux Test';\r\nexport const API_URL = process.env.REACT_APP_API_URL || undefined;\r\nexport const API_VERSION = process.env.REACT_APP_API_VERSION || undefined;\r\nexport const API_CONTACTS_SEED_KEY = process.env.REACT_APP_API_CONTACTS_SEED_KEY || undefined;\r\nexport const HISTORY_BASENAME = process.env.REACT_APP_HISTORY_BASENAME || '/';\r\n","import './style.scss';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { routes } from 'routes';\r\nimport WezomLogo from '../assets/images/wezom-logo.svg';\r\n\r\nconst View = React.memo(() => {\r\n\treturn (\r\n\t\t<NavLink to={'/home'} className={'logo'} activeClassName={'is-active'} exact={true}>\r\n\t\t\t<img className={'logo__img'} src={WezomLogo} alt={'Wezom'} />\r\n\t\t</NavLink>\r\n\t);\r\n});\r\n\r\nexport { View };\r\n","import { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { View } from './view';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {};\r\n};\r\n\r\nconst mapDispatchToProps = null;\r\n\r\nconst NavBar = compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n)(View);\r\n\r\nexport { NavBar };\r\n","import './style.scss';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst View = ({location}) => {\r\nconsole.log(location);\r\n\treturn (\r\n\t\t<div className={'navbar'}>\r\n\t\t\t<ul className={'navbar__list'}>\r\n        <li  className={'navbar__item'}>\r\n          <NavLink \r\n            to={'/home'} \r\n            className={'navbar__link'}\r\n            activeClassName={'active-link'}\r\n          >\r\n            Home\r\n          </NavLink>\r\n          <NavLink \r\n            to={'/contacts'}\r\n            className={'navbar__link'}\r\n            activeClassName={'active-link'}\r\n          >\r\n            Contacts\r\n          </NavLink>\r\n        </li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { View };\r\n","import React from 'react';\nimport { Button, Col, Row} from 'antd';\nimport { LoginOutlined } from '@ant-design/icons';\nimport { Logo } from '../../logo';\nimport { NavBar } from '../../navbar';\nimport './Header.scss';\nimport '../../assets/styles/page.scss';\n\nexport const Header = () =>\n  <Row type={'flex'} gutter={16} align={'middle'}>\n    <Col>\n      <Logo />\n    </Col>\n    <Col className={'_flex-grow'}>\n      <Row type={'flex'} align={'middle'}>\n        <Col className={'_flex-grow'}>\n          <NavBar />\n        </Col>\n        <Col>\n          <Button\n            type={'link'}\n            htmlType={'button'}\n            icon={<LoginOutlined />}\n          >\n            Sign In\n          </Button>\n        </Col>\n      </Row>\n    </Col>\n  </Row>\n\n\n","import backdrop from '../../assets/images/backdrop.jpg';\r\n\r\nexport const style = {\r\n\tcontent: {\r\n\t\tbackgroundImage: `url(${backdrop})`,\r\n\t},\r\n};\r\n","import './style.scss';\r\nimport React, { useMemo } from 'react';\r\nimport { Layout } from 'antd';\r\nimport { APP_NAME } from '../../constants/env';\r\nimport { Header } from '../../pages/Header';\r\nimport { style } from './style';\r\nimport '../../assets/styles/page.scss'\r\n\r\nconst View = React.memo((props) => {\r\n\tconst { children } = props;\r\n\r\n\tconst currentYear = useMemo(() => new Date().getFullYear(), []);\r\n\r\n\treturn (\r\n \r\n      <Layout className={'layout layout--base'}> \r\n          <Layout.Header className={'layout__header'}><Header/></Layout.Header>\r\n          <Layout.Content className={'layout__content'} style={style.content}>{children}</Layout.Content>\r\n          <Layout.Footer className={'layout__footer'}>{currentYear} &copy; {APP_NAME}</Layout.Footer>\r\n      </Layout>\r\n\r\n\t);\r\n});\r\n\r\nexport { View };\r\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionCreators } from '../store/reducers/peopleReducer';\nimport { Form, Input, Button, Row, Col, Select, Checkbox} from 'antd';\nimport { CloseOutlined} from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport './FormForTable.scss';\n\nconst { Option } = Select;\n\nexport const FormForTable = ({view}) => {\n  const [query, setQuery] = useState('');\n  const [form] = Form.useForm();\n  const [checked, setChecked] = useState(false)\n\n  const nationalities = useSelector(({people}) =>  people.peopleData && (\n    people.peopleData\n      .map(person=> person.nationality.name)\n      .filter((nat, i , arr)=> arr.indexOf(nat) === i)\n  ));\n\n  const dispatch = useDispatch();\n\n  useEffect(()=> {\n    form.resetFields();\n    clearSearch();\n    setChecked(false);\n    clearData({checked: false});\n  }, [view])\n\n  const filterByName = (value) => {\n    setQuery(value);\n    const action = actionCreators.filterByName(value);\n    dispatch(action);\n  }\n\n  const selectGender = (value) => {\n    const action = actionCreators.selectGender(value);\n    dispatch(action);\n  };\n\n  const selectNationality = (value) => {\n    const action = actionCreators.selectNationality(value);\n    dispatch(action);\n  };\n\n  const clearSearch = () => {\n    setQuery('')\n    const action = actionCreators.clearForm();\n    dispatch(action);\n  }\n\n  const clearData = ({checked : value}) => {\n    const action = actionCreators.clearData(value);\n    dispatch(action);\n  }\n\n   return (\n    <div className=\"contacts-form\">\n      <Form\n        layout=\"horizontal\"\n        form={form}\n      >\n\n        <Row>\n          <Col className=\"gutter-row\" >\n            <Form.Item name=\"query\">\n            <Input.Search\n              placeholder=\"Search by full name\"\n              value={query}\n              onChange={({target})=> filterByName(target.value)}\n              allowClear\n            />\n            </Form.Item>\n          </Col>\n\n          <Col className=\"gutter-row\">\n            <Form.Item\n              name=\"gender\">\n              <Select \n                placeholder=\"Gender\"\n                allowClear\n                onSelect={selectGender}\n                className={\"select-gender\"}\n                >\n                <Option value=\"male\">Male</Option>\n                <Option value=\"female\">Female</Option>\n                <Option value=\"inderterminate\">Identerminate</Option>\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col className=\"gutter-row\" >\n            <Form.Item name=\"nationality\">\n              <Select\n                mode=\"multiple\"\n                placeholder=\"Nationality\"\n                optionLabelProp=\"label\"\n                onChange={selectNationality}\n              >\n                {nationalities && (nationalities.map(nat =>\n                <Option value={nat} label={nat} key={nat}>\n                  <div className=\"demo-option-label-item\" key={nat}>\n                    <span role=\"img\" aria-label={nat} key={nat}></span>\n                    {nat}\n                  </div>\n                </Option>))}\n\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Form.Item>\n            <Col className=\"gutter-row form-checkox\" >\n              <Checkbox \n                checked={checked}\n                onChange={({target})=> {\n                  clearData(target)\n                  setChecked(!checked)}}\n              >\n                I am creator\n              </Checkbox>\n            </Col>\n          </Form.Item>\n\n            <Button type=\"link\"\n              onClick={() => {\n                form.resetFields();\n                clearSearch();\n                setChecked(false);\n                clearData({checked: false});\n              }}\n                className=\"clear-button\"\n            >\n              <CloseOutlined className=\"blue-icon\"/>\n              Clear\n            </Button>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Statistic, Row, Col, Descriptions } from 'antd';\nimport 'antd/dist/antd.css';\nimport './Statistics.scss';\n\nexport const Statistics = ({people}) => {\n\n  let males = 0;\n  let females = 0;\n  let Indeterminate = 0;\n  people.forEach(person => {\n    switch(person.gender){\n      case 'male':\n        males++\n        break;\n      case 'female':\n        females++\n        break;\n      default:\n        Indeterminate++;\n    }});\n\n  const nationalities = {}\n  people.forEach(person=> \n    nationalities.hasOwnProperty(person.nationality.name) \n      ? nationalities[person.nationality.name]++\n      : nationalities[person.nationality.name] = 1\n  );\n\n  console.log(nationalities);\n\n  return (\n    <div className=\"ant-statistic-footer\">\n      <Row gutter={16}>\n        <Col span={3}>\n          <Statistic title=\"Collection size\" value={people.length} />\n        </Col>\n        <Col span={6}>\n          <Row gutter={16}>\n            <Col span={4}>\n              <Statistic title=\"Males\" value={males} />\n            </Col>\n            <Col span={5}>\n              <Statistic title=\"Females\" value={females} />\n            </Col>\n            <Col span={4}>\n              <Statistic title=\"Indeterminate\" value={Indeterminate} />\n            </Col>\n          </Row>\n            <div className=\"statistic__dominate\">\n              {males > females ? 'Men predominate' : 'Women predominate'}\n            </div>\n        </Col>\n      </Row>\n      <div className=\"ant-description-box\">\n        <Descriptions\n          title=\"Nationalities\"\n          size=\"middle\"\n          column={6}\n        >\n          {Object.keys(nationalities).map(nat => \n            <Descriptions.Item label={nat} key={nat}>{nationalities[nat]}</Descriptions.Item>\n          )}\n        </Descriptions>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Tag, Avatar, Typography } from 'antd';\nimport {AsYouType} from 'libphonenumber-js/min';\nimport './Table.scss';\n\nconst { Paragraph } = Typography;\n\nexport const columns = [\n  {\n    title: 'Avatar',\n    dataIndex: 'picture',\n    key: 'picture',\n    render: picture => <Avatar size=\"large\" src={picture.thumbnail} />,\n  },\n  {\n    title: 'Full-name',\n    dataIndex: 'name',\n    key: 'name',\n    render: name=> <a>{name}</a>,\n    sorter: (a, b) => a.name.localeCompare(b.name),\n  },\n  {\n    title: 'Birthday',\n    dataIndex: 'dob',\n    key: 'dob',\n    render: dob=>{\n    const weekday = new Date(dob.date)\n      .toLocaleTimeString('en-us', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'numeric',\n        day: 'numeric'\n      });\n    \n    return (\n      <>\n        <span>{`${weekday}`}</span>\n        <p>{`${dob.age} years`}</p>\n      </>\n    );\n  }\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email',\n    render: email=> (\n    <div className=\"one_row\">\n      <Paragraph copyable={{text: email}} ></Paragraph>\n      <a>{email}</a>\n    </div>\n    )\n  },\n  {\n    title: 'Phone',\n    dataIndex: 'phone',\n    key: 'phone',\n    text: 'location',\n    render: (phone, row)=>{\n      console.log(row);\n      const newPhone = new AsYouType(row.nat).input(phone);\n      return (\n        <div className=\"one_row\">\n          <Paragraph copyable={{text: newPhone}} ></Paragraph>\n          <a>{newPhone}</a>\n        </div>\n        );\n    }\n  },\n  {\n    title: 'Location',\n    dataIndex: 'location',\n    key: 'location',\n    render: ({country, street, city, state, postcode}) => \n      <>\n        <Paragraph \n          copyable={{text: `${street.number} ${street.name}, ${city}, ${state} ${postcode}`}}\n          className=\"ant__location\"></Paragraph>\n        <div className=\"address\">\n          <p className=\"address-country\">{`/${country}/`}</p>\n          <span>{`${street.number} ${street.name}, ${city}, ${state} ${postcode}`}</span>\n        </div>\n      </>\n  },\n  {\n    title: 'Nationality',\n    key: 'nationality',\n    dataIndex: 'nationality',\n    align: 'center',\n    render: tag => (\n        <Tag color={tag.color}>\n          {tag.name}\n        </Tag>\n    )\n  },\n];\n","/**\r\n * https://www.borovic.ru/codes.html\r\n * https://preply.com/blog/2015/07/28/nazvaniya-stran-i-natsionalnostej-na-anglijskom\r\n * https://skyeng.ru/articles/strana-yazyk-natsionalnost\r\n * */\r\nexport const NATIONALITIES = {\r\n\tAU: { name: 'Australian', color: 'magenta' },\r\n\tBR: { name: 'Brazilian', color: 'red' },\r\n\tCA: { name: 'Canadian', color: 'volcano' },\r\n\tCH: { name: 'Swiss', color: 'orange' },\r\n\tDE: { name: 'German', color: 'gold' },\r\n\tDK: { name: 'Danish', color: 'lime' },\r\n\tES: { name: 'Spanish', color: 'green' },\r\n\tFI: { name: 'Finnish', color: 'cyan' },\r\n\tFR: { name: 'French', color: 'blue' },\r\n\tGB: { name: 'British', color: 'geekblue' },\r\n\tIE: { name: 'Irish', color: 'purple' },\r\n\tIR: { name: 'Iranian', color: '#f50' },\r\n\tNO: { name: 'Norwegian', color: '#2db7f5' },\r\n\tNL: { name: 'Dutch', color: '#87d068' },\r\n\tNZ: { name: 'New Zealander', color: '#9e1068' },\r\n\tTR: { name: 'Turkish', color: '#ffd666' },\r\n\tUS: { name: 'American' },\r\n};\r\n","import React from 'react';\nimport { Avatar, List, Card, Divider } from 'antd';\nimport {Statistics} from '../Statistics';\nimport { FormForTable as Form} from '../../../../FormForTable';\nimport 'antd/dist/antd.css';\nimport './Gallery.scss';\n\nconst { Meta } = Card;\n\nexport const Gallery = ({people, title, columns}) => (\n  <List\n    grid={{ gutter: 4, column: 3 }}\n    dataSource={people}\n    header={<Form/>}\n    footer={<Statistics people={people}/>}\n    pagination={{\n      onChange: page => {\n      },\n      pageSize: 6,\n    }}\n    className=\"list__card-container\"\n    renderItem={person => {\n      const {picture, name, dob, email, phone, nat, location, nationality} = person;\n      return (\n      <List.Item xs={5}>\n        <Card\n          hoverable\n          width={\"100%\"}\n          cover={<Avatar \n            className=\"list__avatar\"\n            size=\"large\"\n            src={picture.large} />}\n        >\n          <Meta \n            title={\n              <>\n                <a>{name}</a>\n                <span className=\"list__person-age\">\n                  {` (${dob.age} years)`}\n                </span>\n                <Divider dashed />\n              </>\n            }\n            \n          description={\n            <>\n              {columns.find(item => item.key === \"email\").render(email)}\n              {columns.find(item => item.key === \"phone\").render(phone, nat)}\n              {columns.find(item => item.key === \"location\").render(location)}\n              <Divider dashed />\n              {columns.find(item => item.key === \"nationality\").render(nationality)}\n            </>\n          } \n        />\n      </Card>\n    </List.Item>)}}\n  />\n);\n","const DATA_URL = 'https://randomuser.me/api/?results=';\n\nconst number = Math.ceil(Math.random()*1000);\nconsole.log(number);\nexport const getData = () => {\n  return fetch(`${DATA_URL}${number}`)\n    .then(response=> response.json())\n    .catch((e)=> ({error: e}))\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormForTable } from '../../FormForTable';\nimport { Statistics } from './components/Statistics';\nimport { columns } from '../../Table/container';\nimport { filterPeople } from '../../store/reducers/peopleReducer';\nimport { actionCreators } from '../../store/reducers/peopleReducer';\nimport { NATIONALITIES } from '../../constants/nationalities';\nimport { Table, Radio, Button } from 'antd';\nimport { Gallery } from './components/Gallery'\nimport { getData } from '../../api/api';\nimport {\n  UnorderedListOutlined,\n  AppstoreOutlined,\n  ReloadOutlined,\n} from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport './Contacts.scss';\n\nexport const Contacts = () => {\n  const [loading, setLoading] = useState(false);\n  const [view, setView] = useState(localStorage.getItem('view') \n    && JSON.parse(localStorage.getItem('view')) || 'table');\n\n  const saveView = (value) => {\n    localStorage.setItem('view', JSON.stringify(value));\n    setView(value);\n  }\n\n  const dispatch = useDispatch();\n\n  const loadData = () => (\n    getData()\n      .then(data=> {\n        if (data.error) {\n          const action =  actionCreators.setError(data.error)\n          return dispatch(action);\n        }\n        const action  = actionCreators.setData(data.results\n          .map(person=> ({ \n            ...person,\n            name: `${person.name.title}. ${person.name.first} ${person.name.last}`,\n            nationality: NATIONALITIES[person.nat],\n          })\n        ));\n      dispatch(action);\n      setLoading(false);\n    })\n  );\n\n  useEffect(()=> {\n    loadData();\n  }, []);\n\n  const people = useSelector(state=> filterPeople(state));\n\n  return (\n    <>\n      <div className=\"contacts__title\">\n        <span><h1 className=\"contacts__title-text\">Contacts</h1></span>\n        <Button \n          shape=\"circle\"\n          icon={<ReloadOutlined />}\n          onClick={()=> {\n            setLoading(true);\n            loadData();\n          }}\n          loading={loading}\n          \n        />\n        <Radio.Group defaultValue={view}>\n          <Button \n            value=\"table\" \n            onClick={()=>saveView(\"table\")}\n            type={view===\"table\" && \"primary\"}\n          >\n            <UnorderedListOutlined />\n          </Button>\n          <Button type=\"button\" value=\"gallery\"\n            onClick={()=>\n              saveView(\"gallery\")}\n            type={view===\"gallery\" && \"primary\"}\n          >\n          <AppstoreOutlined />\n          </Button>\n        </Radio.Group>\n      </div>\n      {view === \"table\" \n      ? <Table \n        columns={columns}\n        dataSource={people}\n        title={() => <FormForTable view={view}/>}\n        footer={() => <Statistics people={people}/>}\n        />\n      : <Gallery \n          people={people}\n          columns={columns}\n          title={() => <FormForTable view={view}/>}\n          footer={() => <Statistics people={people}/>}\n        />\n      }\n    </>\n  );\n}\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport {LayoutBase } from './layouts';\nimport { Contacts } from './pages/Contacts';\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <LayoutBase>\n      <Switch>\n        <Route path=\"/contacts\" component={Contacts}/>\n      </Switch>\n    </LayoutBase>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}