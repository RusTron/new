{"version":3,"sources":["assets/images/wezom-logo.svg","assets/images/backdrop.jpg","logo.svg","store/reducers/modalReducer.js","store/reducers/peopleReducer.js","variables/forContacts.js","store/store.js","variables/forHome.js","constants/env.js","logo/view.jsx","navbar/container.js","navbar/view.jsx","pages/Header/Header.jsx","layouts/base/style.js","layouts/base/view.jsx","ModalWindow/LoginReduxForm/LoginReduxForm.jsx","ModalWindow/ModalWindow.jsx","FormForTable/FormForTable.jsx","pages/Contacts/components/Statistics/Statistics.jsx","Table/container.jsx","constants/nationalities.js","pages/Contacts/components/Gallery/Gallery.jsx","api/api.js","pages/Contacts/Contacts.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","modalInitialState","modal1Visible","actionCreators","items","type","peopleData","value","error","item","searchValue","selectedGender","selectedNationality","clear","data","contactsInitialState","rootReducer","combineReducers","modal","state","action","people","form","formReducer","store","createStore","console","log","getState","APP_NAME","process","REACT_APP_ALLOW_DEV_CONSOLE","REACT_APP_ALLOW_REDUX_DEVTOOLS_EXTENSION","REACT_APP_ALLOW_WINDOW_EXTENDS","REACT_APP_NAME","REACT_APP_API_URL","REACT_APP_API_VERSION","REACT_APP_API_CONTACTS_SEED_KEY","REACT_APP_HISTORY_BASENAME","View","React","memo","to","className","activeClassName","exact","src","WezomLogo","alt","NavBar","compose","connect","Header","useSelector","modal2Visible","dispatch","useDispatch","gutter","align","htmlType","icon","LoginOutlined","onClick","style","content","backgroundImage","backdrop","props","children","currentYear","useMemo","Date","getFullYear","Content","Footer","LoginReduxForm","onSubmit","name","initialValues","remember","onFinish","Item","rules","required","message","prefix","UserOutlined","placeholder","component","LockOutlined","CloseOutlined","reduxForm","ModalWindow","title","top","centered","visible","Option","Input","Search","Select","FormForTable","useState","query","setQuery","Form","useForm","nationalities","map","person","nat","filter","i","arr","indexOf","labelCol","span","wrapperCol","layout","col","onChange","filterByName","target","allowClear","onSelect","mode","optionLabelProp","label","key","role","aria-label","checked","clearData","resetFields","clearSearch","Statistics","males","females","Indeterminate","forEach","gender","hasOwnProperty","length","size","column","Object","keys","Paragraph","Typography","columns","dataIndex","render","picture","thumbnail","sorter","a","b","localeCompare","dob","weekday","date","toLocaleTimeString","year","month","day","age","email","copyable","text","phone","row","newPhone","AsYouType","input","country","street","city","postcode","number","tag","color","NATIONALITIES","AU","BR","CA","CH","DE","DK","ES","FI","FR","GB","IE","IR","NO","NL","NZ","TR","US","Meta","Card","Gallery","grid","dataSource","header","footer","pagination","page","pageSize","renderItem","location","xs","hoverable","width","cover","large","dashed","description","find","Math","ceil","random","Contacts","view","setView","useEffect","fetch","then","response","json","catch","e","results","first","last","persons","includes","toLowerCase","filterPeople","shape","ReloadOutlined","Group","defaultValue","buttonStyle","Button","UnorderedListOutlined","AppstoreOutlined","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.105488ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wezom-logo.324b96ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/backdrop.f7eab148.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import {MODAL1VISIBLE, MODAL1INVISIBLE } from '../../variables/forHome';\n// import {}\nconst modalInitialState = () => ({\n  modal1Visible: false,\n});\n\nexport const modalReducer = (state = modalInitialState, action) => {\n  debugger;\n  switch (action.type) {\n    case MODAL1VISIBLE:\n      return {\n        ...state,\n        modal1Visible: state.modal1Visible = true,\n      };\n    case MODAL1INVISIBLE:\n      return {\n        ...state,\n        modal1Visible: state.modal1Visible = false,\n      };\n    default:\n      return state;\n  }\n};\n","import { \n  SETPEOPLE,\n  FILTERBYNAME,\n  SETSELECTEDGENDER,\n  SETSELECTEDNATIONALITY,\n  CLEARFORM,\n  CLEARDATA,\n  SETERROR,\n} from '../../variables/forContacts';\n\nexport const actionCreators = {\n  setData: (items) => ({\n    type: SETPEOPLE,\n    peopleData: items,\n  }),\n  setError: (value)=>({\n      type: SETERROR,\n       error: value,\n  }),\n  filterByName: (item) => ({\n    type: FILTERBYNAME,\n   searchValue: item,\n  }),\n  selectGender: (item) => ({\n    type: SETSELECTEDGENDER,\n    selectedGender: item,\n  }),\n  selectNationality: (item) => ({\n    type: SETSELECTEDNATIONALITY,\n    selectedNationality: item,\n  }),\n  clearForm: () => ({\n    type: CLEARFORM,\n    clear: true,\n  }),\n  clearData: (value) => ({\n    type: CLEARDATA,\n    data: value,\n  })\n}\n\nexport const filterPeople = ({people}) => {\n  debugger;\n\n  const {peopleData, searchValue, selectedNationality, selectedGender, data} = people;\n\n  let persons = [];\n  console.log(people);\n  if (data) {\n    return persons;\n  }\n  if (peopleData) {\n    persons = [...peopleData];\n  };\n\n  if (searchValue) {\n    persons = persons.filter(item=> item.name.includes(searchValue.toLowerCase()))\n  };\n\n  if (selectedNationality && selectedNationality.length) {\n    persons = persons.filter(item=> selectedNationality.includes(item.nat.name))\n  };\n\n  if (selectedGender) {\n    persons = persons.filter(person=> person.gender === selectedGender)\n  }\n\n  return persons;\n}\n\nconst contactsInitialState = () => ({\n  peopleData: [],\n  searchValue: '',\n  selectedNationality: '',\n  selectedGender: '',\n  clear: false,\n  data: true,\n  error: false,\n});\n\nexport const peopleReducer = (state = contactsInitialState, action) => {\n  debugger;\n  switch (action.type) {\n    case SETERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case SETPEOPLE:\n      return {\n        ...state,\n        peopleData: action.peopleData,\n      };\n    case FILTERBYNAME:\n      return {\n        ...state,\n        searchValue: action.searchValue,\n      };\n    case  SETSELECTEDGENDER:\n    return {\n      ...state,\n      selectedGender: action.selectedGender,\n    };\n    case  SETSELECTEDNATIONALITY:\n      return {\n        ...state,\n        selectedNationality: action.selectedNationality,\n      };\n    case  CLEARFORM:\n      return {\n        ...state,\n        searchValue: '',\n        selectedNationality: '',\n        selectedGender: '',\n        clear: false,\n      };\n    case  CLEARDATA:\n      return {\n        ...state,\n        data: action.data,\n      }\n\n    default:\n      return state;\n  }\n};\n","export const SETPEOPLE = 'SETPEOPLE';\nexport const SETERROR = 'SETERROR';\nexport const FILTERBYNAME = 'FILTERBYNAME';\nexport const SETSELECTEDNATIONALITY = 'SETSELECTEDNATIONALITY';\nexport const SETSELECTEDGENDER = 'SETSELECTEDGENDER';\nexport const CLEARFORM = 'CLEARFORM';\nexport const CLEARDATA = 'CLEARDATA';\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { modalReducer} from './reducers/modalReducer';\nimport { peopleReducer} from './reducers/peopleReducer';\nimport { reducer as formReducer} from 'redux-form';\n// import {MODAL1VISIBLE, MODAL1INVISIBLE, MODAL2VISIBLE} from '../variables/forHome';\n\n// const initialState = {\n//   modal1Visible: false,\n//   y: 1,\n// }\n\nconst rootReducer = combineReducers({\n  modal: modalReducer,\n  people: peopleReducer,\n  form: formReducer,\n});\n\nconst store = createStore(rootReducer);\ndebugger;\n\nconsole.log(store.getState());\n\n// store.dispatch({type: 'INCREASE'});\n\nexport default store;","export const MODAL1VISIBLE = 'MODAL1VISIBLE';\nexport const MODAL1INVISIBLE = 'MODAL1INVISIBLE';\nexport const MODAL2VISIBLE = 'MODAL2VISIBLE';\n","/** Build environment */\r\nexport const BUILD_ENV = process.env.NODE_ENV;\r\nexport const IS_DEVELOPMENT = BUILD_ENV === 'development';\r\nexport const IS_PRODUCTION = BUILD_ENV === 'production';\r\n\r\n/** Permissions */\r\nexport const ALLOW_DEV_CONSOLE = process.env.REACT_APP_ALLOW_DEV_CONSOLE === 'true';\r\nexport const ALLOW_REDUX_DEVTOOLS_EXTENSION = process.env.REACT_APP_ALLOW_REDUX_DEVTOOLS_EXTENSION === 'true';\r\nexport const ALLOW_WINDOW_EXTENDS = process.env.REACT_APP_ALLOW_WINDOW_EXTENDS === 'true';\r\n\r\n/** App */\r\nexport const APP_NAME = process.env.REACT_APP_NAME || 'Wezom React-Redux Test';\r\nexport const API_URL = process.env.REACT_APP_API_URL || undefined;\r\nexport const API_VERSION = process.env.REACT_APP_API_VERSION || undefined;\r\nexport const API_CONTACTS_SEED_KEY = process.env.REACT_APP_API_CONTACTS_SEED_KEY || undefined;\r\nexport const HISTORY_BASENAME = process.env.REACT_APP_HISTORY_BASENAME || '/';\r\n","import './style.scss';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { routes } from 'routes';\r\nimport WezomLogo from '../assets/images/wezom-logo.svg';\r\n\r\nconst View = React.memo(() => {\r\n\treturn (\r\n\t\t<NavLink to={'/home'} className={'logo'} activeClassName={'is-active'} exact={true}>\r\n\t\t\t<img className={'logo__img'} src={WezomLogo} alt={'Wezom'} />\r\n\t\t</NavLink>\r\n\t);\r\n});\r\n\r\nexport { View };\r\n","import { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { View } from './view';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {};\r\n};\r\n\r\nconst mapDispatchToProps = null;\r\n\r\nconst NavBar = compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n)(View);\r\n\r\nexport { NavBar };\r\n","import './style.scss';\r\nimport React, { useMemo } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { routes } from 'routes';\r\n\r\nconst View = () => {\r\n\t// const navbarRoutes = useMemo(() => [\r\n\t// \t{ name: 'Home', key: 'home' },\r\n\t// ], []);\r\n\r\n\treturn (\r\n\t\t<div className={'navbar'}>\r\n\t\t\t<ul className={'navbar__list'}>\r\n\t\t\t\t{/* {navbarRoutes.map((route) => ( */}\r\n\t\t\t\t\t<li  className={'navbar__item'}>\r\n\t\t\t\t\t\t<NavLink to={'/home'} className={'navbar__link'}>Home</NavLink>\r\n\t\t\t\t\t\t<NavLink to={'/contacts'} className={'navbar__link'}>Contacts</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t{/* ))} */}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { View };\r\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Col, Row, Modal } from 'antd';\nimport { LoginOutlined } from '@ant-design/icons';\nimport { Logo } from '../../logo';\nimport { NavBar } from '../../navbar';\nimport {MODAL1VISIBLE, MODAL2VISIBLE} from '../../variables/forHome';\n// import logo from './logo.svg';\nimport './Header.scss';\nimport '../../assets/styles/page.scss';\n\nexport const Header = () => {\n  const modal1Visible = useSelector(state=> state.modal1Visible);\n  const modal2Visible = useSelector(state=> state.modal2Visible);  \nconsole.log(modal1Visible);\n  const dispatch = useDispatch();\n\nconst setModal1Visible = () => dispatch({type: MODAL1VISIBLE});\nconst setModal2Visible = () => dispatch({type: MODAL2VISIBLE});\n  debugger;\n  const increase = () => {dispatch({type: 'INCREASE'})};\n  return (\n    // <div className={'header'}>\n      <Row type={'flex'} gutter={36} align={'middle'}>\n        <Col>\n          <Logo />\n        </Col>\n        <Col className={'_flex-grow'}>\n          <Row type={'flex'} gutter={16} align={'middle'}>\n            <Col className={'_flex-grow'}>\n              <NavBar />\n            </Col>\n            <Col>\n              <Button\n                type={'link'}\n                htmlType={'button'}\n                icon={<LoginOutlined />}\n                onClick={setModal1Visible}\n              >\n                Sign In\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n        )}\n      {/* </div> */}\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p onClick={increase}>\n          Edit <code>src/App.js</code> and save to reload. {x}, {y}.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n  </header> */}\n      // </div>\n","import backdrop from '../../assets/images/backdrop.jpg';\r\n\r\nexport const style = {\r\n\tcontent: {\r\n\t\tbackgroundImage: `url(${backdrop})`,\r\n\t},\r\n};\r\n","import './style.scss';\r\nimport React, { useMemo } from 'react';\r\nimport { Layout } from 'antd';\r\nimport { APP_NAME } from '../../constants/env';\r\nimport { Header } from '../../pages/Header';\r\nimport { style } from './style';\r\nimport '../../assets/styles/page.scss'\r\n\r\nconst View = React.memo((props) => {\r\n\tconst { children } = props;\r\n\r\n\tconst currentYear = useMemo(() => new Date().getFullYear(), []);\r\n\r\n\treturn (\r\n \r\n      <Layout className={'layout layout--base'}> \r\n          <Layout.Header className={'layout__header'}><Header/></Layout.Header>\r\n          <Layout.Content className={'layout__content'} style={style.content}>{children}</Layout.Content>\r\n          <Layout.Footer className={'layout__footer'}>{currentYear} &copy; {APP_NAME}</Layout.Footer>\r\n      </Layout>\r\n\r\n\t);\r\n});\r\n\r\nexport { View };\r\n","import React from 'react';\nimport { reduxForm } from 'redux-form'\nimport { Form, Input, Button, } from 'antd';\nimport { UserOutlined, LockOutlined, CloseOutlined} from '@ant-design/icons';\nimport './LoginReduxForm.scss';\n\nexport let LoginReduxForm = ({onSubmit}) => {\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return (\n    <Form\n      name=\"normal_login\"\n      className=\"login-form\"\n      initialValues={{ remember: true }}\n      onFinish={onSubmit}\n    >\n      <Form.Item\n        name=\"email\"\n        rules={[{ required: true, message: 'Please input your Username!' }]}\n      >\n        <Input\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          placeholder=\"Email\"\n          component=\"input\"\n          type=\"email\"\n          name=\"email\"\n       />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your Password!' }]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n          component=\"input\"\n          name=\"password\"\n        />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          Log in\n        </Button>\n        <CloseOutlined className=\"redicon\"/>\n      </Form.Item>\n    </Form>\n  );\n};\n\nLoginReduxForm = reduxForm({\n  form: 'contact'\n})(LoginReduxForm)\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Modal } from 'antd';\nimport {MODAL1VISIBLE, MODAL1INVISIBLE } from '../variables/forHome';\nimport { LoginReduxForm } from './LoginReduxForm';\nimport './ModalWindow.scss';\n\nexport const ModalWindow = () => {\n  const modal1Visible = useSelector(state=> state.modal.modal1Visible);\n\n  const dispatch = useDispatch();\n  \n  const setModal1Visible = () => dispatch({type: MODAL1VISIBLE});\n  const setModal1InVisible = () => dispatch({type: MODAL1INVISIBLE});\n\n  console.log(modal1Visible);\n\n  return (\n    <>\n      <Modal\n        title=\"Sign in\"\n        style={{ top: 20 }}\n        centered\n        visible={modal1Visible}\n      >\n        <LoginReduxForm onSubmit={()=>setModal1InVisible()}/>\n      </Modal>\n      {/* <Button type=\"primary\" onClick={() => this.setModal2Visible(true)}>\n        Vertically centered modal dialog\n      </Button>\n      <Modal\n        title=\"Vertically centered modal dialog\"\n        centered\n        visible={this.state.modal2Visible}\n        onOk={() => this.setModal2Visible(false)}\n        onCancel={() => this.setModal2Visible(false)}\n      >\n        <p>some contents...</p>\n        <p>some contents...</p>\n        <p>some contents...</p>\n      </Modal> */}\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionCreators } from '../store/reducers/peopleReducer';\nimport { filterPeople } from '../store/reducers/peopleReducer';\nimport { Form, Input, Button, Row, Col, Select, Checkbox} from 'antd';\nimport { CloseOutlined} from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\nconst { Search } = Input;\nconst { Option } = Select;\n\nexport const FormForTable = () => {\n  const [query, setQuery] = useState('');\n  const [genderValue, setGenderValue] = useState('')\n  const [form] = Form.useForm();\n\n  const nationalities = useSelector(({people}) =>  people.peopleData && (\n    people.peopleData\n      .map(person=> person.nat.name)\n      .filter((nat, i , arr)=> arr.indexOf(nat) === i)\n  ));\n\nconst dispatch = useDispatch();\n\nconst filterByName = (value) => {\n  console.log(value)\n  setQuery(value);\n  const action = actionCreators.filterByName(value);\n  dispatch(action);\n}\n\nconst selectGender = (value) => {\n  const action = actionCreators.selectGender(value);\n  dispatch(action);\n};\n\n  const selectNationality = (value) => {\n    const action = actionCreators.selectNationality(value);\n    dispatch(action);\n  };\n\n  const clearSearch = () => {\n    setQuery('')\n    const action = actionCreators.clearForm();\n    dispatch(action);\n  }\n\n  const clearData = ({checked : value}) => {\n    debugger;\n    const action = actionCreators.clearData(value);\n    dispatch(action);\n  }\n\n   return (\n    <>\n      <Form\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 24\n        }}\n        layout=\"horizontal\"\n        form={form}\n      >\n\n        <Row col={5}>\n          <Col className=\"gutter-row\" span={10}>\n            <Form.Item name=\"query\">\n            <Input.Search\n              placeholder=\"Search by full name\"\n              value={query}\n              onChange={({target})=> filterByName(target.value)}\n              allowClear\n            />\n            </Form.Item>\n          </Col>\n\n          <Col className=\"gutter-row\" span={4}>\n            <Form.Item\n              name=\"gender\">\n              <Select \n                placeholder=\"Gender\"\n                allowClear\n                onSelect={selectGender}\n                >\n                <Option value=\"male\">Male</Option>\n                <Option value=\"female\">Famale</Option>\n                <Option value=\"inderterminate\">Identerminate</Option>\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col className=\"gutter-row\" span={5}>\n            <Form.Item name=\"nationality\">\n              <Select\n                mode=\"multiple\"\n                placeholder=\"select one country\"\n                optionLabelProp=\"label\"\n                onSelect={selectNationality}\n              >\n                {nationalities && (nationalities.map(nat =>\n                <Option value={nat} label={nat}>\n                  <div className=\"demo-option-label-item\" key={nat}>\n                    <span role=\"img\" aria-label={nat} key={nat}></span>\n                    {nat}\n                  </div>\n                </Option>))}\n\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Form.Item>\n            <Col className=\"gutter-row\" span={188}>\n              <Checkbox onChange={({target})=>clearData(target)}>I am creator</Checkbox>\n            </Col>\n          </Form.Item>\n\n            <Button type=\"link\"\n              onClick={() => {\n                form.resetFields();\n                clearSearch()}} \n            >\n              <CloseOutlined className=\"blue-icon\"/>\n              Clear\n            </Button>\n        </Row>\n      </Form>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { actionCreators } from '../../../../store/reducers/peopleReducer';\n// import { filterPeople } from '../store/reducers/peopleReducer';\nimport { Statistic, Button, Row, Col, Descriptions } from 'antd';\n// import { CloseOutlined} from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport './Statistics.scss';\n\nexport const Statistics = ({people}) => {\n\n  let males = 0;\n  let females = 0;\n  let Indeterminate = 0;\n  people.forEach(person => {\n    switch(person.gender){\n      case 'male':\n        males++\n        break;\n      case 'female':\n        females++\n        break;\n      default:\n        Indeterminate++;\n    }});\n\n  const nationalities = {}\n  people.forEach(person=> \n    nationalities.hasOwnProperty(person.nat.name) \n      ? nationalities[person.nat.name]++\n      : nationalities[person.nat.name] = 1\n  );\n\n  console.log(nationalities);\n\n  return (\n    <>\n      <Row gutter={16}>\n        <Col span={2}>\n          <Statistic title=\"Collection size\" value={people.length} />\n        </Col>\n        <Col span={6}>\n          <Row gutter={16}>\n            <Col span={3.5}>\n              <Statistic title=\"Males\" value={males} />\n            </Col>\n            <Col span={4.5}>\n              <Statistic title=\"Females\" value={females} />\n            </Col>\n            <Col span={4}>\n              <Statistic title=\"Indeterminate\" value={Indeterminate} />\n            </Col>\n          </Row>\n            <div className=\"statistic__dominate\">{males > females ? 'Men predominate' : 'Women predominate'}</div>\n        </Col>\n      </Row>\n      {/* <div className=\"statistic__nationalities\">Nationalities</div> */}\n      <div className=\"box\">\n        <Descriptions\n          title=\"Nationalities\"\n          size=\"middle\"\n          column={6}\n        >\n          {Object.keys(nationalities).map(nat => \n            <Descriptions.Item label={nat}>{nationalities[nat]}</Descriptions.Item>\n          )}\n        </Descriptions>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Tag, Avatar, Typography } from 'antd';\nimport {AsYouType} from 'libphonenumber-js/min';\nimport './Table.scss';\n\nconst { Paragraph } = Typography;\n\nexport const columns = [\n  {\n    title: 'Avatar',\n    dataIndex: 'picture',\n    key: 'picture',\n    render: picture => <Avatar size=\"large\" src={picture.thumbnail} />,\n  },\n  {\n    title: 'Full-name',\n    dataIndex: 'name',\n    key: 'name',\n    render: name=> <a>{name}</a>,\n    sorter: (a, b) => a.name.localeCompare(b.name),\n  },\n  {\n    title: 'Birthday',\n    dataIndex: 'dob',\n    key: 'dob',\n    render: dob=>{\n    const weekday = new Date(dob.date)\n      .toLocaleTimeString('en-us', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'numeric',\n        day: 'numeric'\n      });\n    \n    return (\n      <>\n        <span>{`${weekday}`}</span>\n        <p>{`${dob.age} years`}</p>\n      </>\n    );\n  }\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email',\n    render: email=> (\n    <div className=\"one_row\">\n      <Paragraph copyable={{text: email}} ></Paragraph>\n      <a>{email}</a>\n    </div>\n    )\n  },\n  {\n    title: 'Phone',\n    dataIndex: 'phone',\n    key: 'phone',\n    text: 'nat',\n    render: (phone, row)=>{\n      const newPhone = new AsYouType(row.nat).input(phone);\n      return (\n        <div className=\"one_row\">\n          <Paragraph copyable={{text: newPhone}} ></Paragraph>\n          <a>{newPhone}</a>\n        </div>\n        );\n    }\n  },\n  {\n    title: 'Location',\n    dataIndex: 'location',\n    key: 'location',\n    render: ({country, street, city, state, postcode}) => {\n      debugger;\n      const location = [country, street.number]\n      return (\n      <>\n        <Paragraph \n          copyable={{text: `${street.number} ${street.name}, ${city}, ${state} ${postcode}`}}\n          className=\"ant__location\"></Paragraph>\n        <div className=\"address\">\n          <p className=\"address-country\">{`/${country}/`}</p>\n          <span>{`${street.number} ${street.name}, ${city}, ${state} ${postcode}`}</span>\n        </div>\n      </>\n      )}\n  },\n  {\n    title: 'Nationality',\n    key: 'nat',\n    dataIndex: 'nat',\n    align: 'center',\n    render: tag => (\n        <Tag color={tag.color}>\n          {tag.name}\n        </Tag>\n    )\n  },\n];\n\nexport const data = [\n  {\"gender\":\"male\",\n  \"name\":{\"title\":\"Mr\",\"first\":\"Torjus\",\"last\":\"Rashid\"},\n  \"location\":{\"street\":{\"number\":6742,\"name\":\"Tryvannsveien\"},\"city\":\"Fossnes\",\"state\":\"Hordaland\",\"country\":\"Norway\",\"postcode\":\"2401\",\"coordinates\":{\"latitude\":\"52.0255\",\"longitude\":\"-145.8886\"},\"timezone\":{\"offset\":\"+1:00\",\"description\":\"Brussels, Copenhagen, Madrid, Paris\"}},\n  \"email\":\"torjus.rashid@example.com\",\n  \"login\":{\"uuid\":\"ea7ae35b-108a-4d26-88ce-77128b2047ab\",\"username\":\"smalltiger510\",\"password\":\"macman\",\"salt\":\"gbHO1lyI\",\"md5\":\"efec7d77e2114f3bf1dcd57b3856dc03\",\"sha1\":\"6a3c662c18686899f24de044a401fd3e7c498b41\",\"sha256\":\"c946af12c53878255d4fa2995fe1f289161dff9c6b2d00880db80cf2480f7b05\"},\n  \"dob\":{\"date\":\"1971-05-09T02:34:35.012Z\",\"age\":49},\n  \"registered\":{\"date\":\"2003-09-11T05:48:43.910Z\",\"age\":17},\n  \"phone\":\"67102467\",\n  \"cell\":\"93333981\",\n  \"id\":{\"name\":\"FN\",\"value\":\"09057134787\"},\n  \"picture\":{\"large\":\"https://randomuser.me/api/portraits/men/15.jpg\",\"medium\":\"https://randomuser.me/api/portraits/med/men/15.jpg\",\"thumbnail\":\"https://randomuser.me/api/portraits/thumb/men/15.jpg\"},\n  \"nat\":\"NO\"},\n\n  {\"gender\":\"female\",\"name\":{\"title\":\"Miss\",\"first\":\"Ellen\",\"last\":\"Davies\"},\"location\":{\"street\":{\"number\":8593,\"name\":\"Broadway\"},\"city\":\"Newry\",\"state\":\"Avon\",\"country\":\"United Kingdom\",\"postcode\":\"U48 2HJ\",\"coordinates\":{\"latitude\":\"13.0379\",\"longitude\":\"-47.3497\"},\"timezone\":{\"offset\":\"-3:00\",\"description\":\"Brazil, Buenos Aires, Georgetown\"}},\"email\":\"ellen.davies@example.com\",\"login\":{\"uuid\":\"555fd244-9e53-435d-8905-cddc5b034545\",\"username\":\"goldenelephant431\",\"password\":\"destiny\",\"salt\":\"U11XwSbm\",\"md5\":\"7cfc17180b73f03763d884a1d1672931\",\"sha1\":\"e639b618324d28c024524790c53bae562c81cf7a\",\"sha256\":\"49fabb13f337e37832c50d592ef8420c9f44dd013c03f660584ba79a2b33eb70\"},\"dob\":{\"date\":\"1978-03-25T10:00:23.265Z\",\"age\":42},\"registered\":{\"date\":\"2012-02-28T15:28:09.940Z\",\"age\":8},\"phone\":\"0111 467 6654\",\"cell\":\"0729-801-633\",\"id\":{\"name\":\"NINO\",\"value\":\"HG 87 96 99 R\"},\"picture\":{\"large\":\"https://randomuser.me/api/portraits/women/0.jpg\",\"medium\":\"https://randomuser.me/api/portraits/med/women/0.jpg\",\"thumbnail\":\"https://randomuser.me/api/portraits/thumb/women/0.jpg\"},\"nat\":\"GB\"},\n];\n","/**\r\n * https://www.borovic.ru/codes.html\r\n * https://preply.com/blog/2015/07/28/nazvaniya-stran-i-natsionalnostej-na-anglijskom\r\n * https://skyeng.ru/articles/strana-yazyk-natsionalnost\r\n * */\r\nexport const NATIONALITIES = {\r\n\tAU: { name: 'Australian', color: 'magenta' },\r\n\tBR: { name: 'Brazilian', color: 'red' },\r\n\tCA: { name: 'Canadian', color: 'volcano' },\r\n\tCH: { name: 'Swiss', color: 'orange' },\r\n\tDE: { name: 'German', color: 'gold' },\r\n\tDK: { name: 'Danish', color: 'lime' },\r\n\tES: { name: 'Spanish', color: 'green' },\r\n\tFI: { name: 'Finnish', color: 'cyan' },\r\n\tFR: { name: 'French', color: 'blue' },\r\n\tGB: { name: 'British', color: 'geekblue' },\r\n\tIE: { name: 'Irish', color: 'purple' },\r\n\tIR: { name: 'Iranian', color: '#f50' },\r\n\tNO: { name: 'Norwegian', color: '#2db7f5' },\r\n\tNL: { name: 'Dutch', color: '#87d068' },\r\n\tNZ: { name: 'New Zealander', color: '#9e1068' },\r\n\tTR: { name: 'Turkish', color: '#ffd666' },\r\n\tUS: { name: 'American' },\r\n};\r\n","import React from 'react';\nimport { Avatar, List, Card, Divider } from 'antd';\nimport {Statistics} from '../Statistics';\nimport { FormForTable as Form} from '../../../../FormForTable';\nimport 'antd/dist/antd.css';\nimport './Gallery.scss';\n\nconst { Meta } = Card;\n\nexport const Gallery = ({people, title, columns}) => {\n  debugger;\n  return(\n    <>\n      <List\n        grid={{ gutter: 4, column: 3 }}\n        dataSource={people}\n        header={<Form/>}\n        footer={<Statistics people={people}/>}\n        pagination={{\n          onChange: page => {\n            console.log(page);\n          },\n          pageSize: 6,\n        }}\n        className=\"list__card-container\"\n        renderItem={person => {\n          const {picture, name, dob, email, phone, nat, location} = person;\n          return (\n          <List.Item xs={5}>\n            <Card\n              hoverable\n              width={\"100%\"}\n              cover={<Avatar \n                className=\"list__avatar\"\n                size=\"large\"\n                src={picture.large} />}\n            >\n              <Meta \n                title={\n                  <>\n                    <a>{name}</a>\n                    <span className=\"list__person-age\">\n                      {` (${dob.age} years)`}\n                    </span>\n                    <Divider dashed />\n                  </>\n                }\n                \n              description={\n                <>\n                  {columns.find(item => item.key === \"email\").render(email)}\n                  {columns.find(item => item.key === \"phone\").render(phone, nat)}\n                  {columns.find(item => item.key === \"location\").render(location)}\n                  <Divider dashed />\n                  {columns.find(item => item.key === \"nat\").render(nat)}\n                </>\n              } \n            />\n          </Card>\n        </List.Item>)}}\n      />\n    </>\n  );\n}","const DATA_URL = 'https://randomuser.me/api/?results=';\n\nconst number = Math.ceil(Math.random()*1000);\nconsole.log(number);\nexport const getData = () => {\n  return fetch(`${DATA_URL}${number}`)\n    .then(response=> response.json())\n    .catch((e)=> ({error: e}))\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ModalWindow } from '../../ModalWindow';\nimport { FormForTable } from '../../FormForTable';\nimport { Statistics } from './components/Statistics';\nimport { columns } from '../../Table/container';\nimport { filterPeople } from '../../store/reducers/peopleReducer';\nimport { actionCreators } from '../../store/reducers/peopleReducer';\nimport { NATIONALITIES } from '../../constants/nationalities';\nimport { Table, Radio, Button } from 'antd';\nimport { Gallery } from './components/Gallery'\nimport { getData } from '../../api/api';\nimport {\n  UnorderedListOutlined,\n  AppstoreOutlined,\n  ReloadOutlined,\n} from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport './Contacts.scss';\n\nexport const Contacts = () => {\n  const [view, setView] = useState('table');\n\n  const dispatch = useDispatch();\n\n  useEffect(()=> {\n    getData()\n      .then(data=> {\n        if (data.error) {\n          const action =  actionCreators.setError(data.error)\n          return dispatch(action);\n        }\n        const action  = actionCreators.setData(data.results\n          .map(person=> ({ \n            ...person,\n            name: `${person.name.title}. ${person.name.first} ${person.name.last}`,\n            nat: NATIONALITIES[person.nat]\n          })\n        ));\n      dispatch(action);\n    })\n  }, []);\n\n  const people = useSelector(state=> {\n\n    return filterPeople(state)});\n\n  return (\n    <>\n      <ModalWindow />\n      <div className=\"contacts__title\">\n        <span><h1 className=\"contacts__title-text\">Contacts</h1></span>\n        <Button shape=\"circle\" icon={<ReloadOutlined />} />\n        <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\">\n          <Radio.Button value=\"table\" onClick={()=>setView(\"table\")}>\n            <UnorderedListOutlined />\n          </Radio.Button>\n          <Radio.Button value=\"gallery\" onClick={()=>setView(\"gallery\")}>\n          <AppstoreOutlined />\n          </Radio.Button>\n        </Radio.Group>\n      </div>\n      {view === \"table\" \n      ? <Table \n        columns={columns}\n        dataSource={people}\n        title={() => <FormForTable />}\n        footer={() => <Statistics people={people}/>}\n        />\n      : <Gallery \n          people={people}\n          columns={columns}\n          title={() => <FormForTable />}\n          footer={() => <Statistics people={people}/>}\n        />\n      }\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport {LayoutBase } from './layouts';\nimport { Contacts } from './pages/Contacts';\nimport { actionCreators } from './store/reducers/peopleReducer';\nimport { getData } from './api/api';\nimport logo from './logo.svg';\nimport './App.scss';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  return (\n    \n    <>\n      <LayoutBase>\n        <Contacts />\n       {/* <Header /> */}\n      </LayoutBase>\n    </>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}